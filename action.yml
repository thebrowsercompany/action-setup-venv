name: 'venv setup'
description: 'configures venv, python and caches'

inputs:
  python-version:
    description: "Version range or exact version of Python or PyPy to use, using SemVer's version range syntax."
  cache-dependency-path:
    description: "Requirement files to install. Can be a glob pattern."
    default: '**/requirements*.txt'
  venv-dir:
    default: '.venv'
  install-cmd:
    description: 'Command to install python dependencies.'
  is-self-hosted:
    description: "Whether or not the runner is self-hosted. Unfortunately this is not deducible from the existing context values."
    default: 'false'

outputs:
  cache-hit:
    description: "A boolean value to indicate if a cache was restored"
    value: ${{ steps.cache-venv.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - uses: thebrowsercompany/check-python-exists@e42d9f461a54d01901f01411bb9fd564c8c9dc5c # PR update when merged
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}
        is-self-hosted: ${{ inputs.is-self-hosted }}

    - uses: actions/cache@v3
      id: cache-venv
      with:
        path: ${{ inputs.venv-dir }}
        key: setup-venv-${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-${{ steps.setup-python.outputs.python-path }}-${{ hashFiles(inputs.cache-dependency-path) }}-${{ inputs.install-cmd }}

    - run: python${{ steps.setup-python.outputs.python-version }} -m venv ${{ inputs.venv-dir }}
      if: steps.cache-venv.outputs.cache-hit != 'true'
      shell: bash

    - run: |
        source ${{ inputs.venv-dir }}/bin/activate
        echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
        echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
      shell: bash

    - run: ${{ inputs.install-cmd }}
      if: inputs.install-cmd != '' && steps.cache-venv.outputs.cache-hit != 'true'
      shell: bash
